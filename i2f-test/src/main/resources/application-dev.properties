spring.profiles.active=dev

logging.level.com.i2f=debug

# async 配置
i2f.springboot.config.async.enable=true
i2f.springboot.config.async.max-pool-size=100
i2f.springboot.config.async.core-pool-size=10


# cors 配置
i2f.springboot.config.cors.enable=true
i2f.springboot.config.cors.allowed-origin=*
i2f.springboot.config.cors.allowed-header=*
i2f.springboot.config.cors.allow-credentials=true
i2f.springboot.config.cors.allowed-method=*
i2f.springboot.config.cors.max-age=6000
i2f.springboot.config.cors.match_patten=/**

# 多数据源配置
i2f.springboot.config.datasource.enable=false
# 必须的主数据源 master
i2f.springboot.config.datasource.multiply.master.url=jdbc:mysql://39.105.33.11:3306/car_loc_db?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
i2f.springboot.config.datasource.multiply.master.username=root
i2f.springboot.config.datasource.multiply.master.password=ltb12315
i2f.springboot.config.datasource.multiply.master.driver=com.mysql.cj.jdbc.Driver

# 定义其他数据源
i2f.springboot.config.datasource.multiply.cas.url=jdbc:mysql://localhost:3306/cas_test_db?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
i2f.springboot.config.datasource.multiply.cas.username=root
i2f.springboot.config.datasource.multiply.cas.password=xxx
i2f.springboot.config.datasource.multiply.cas.driver=com.mysql.cj.jdbc.Driver


spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=UserHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
spring.datasource.url=jdbc:mysql://39.105.33.11:3306/test_db?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=ltb12315
spring.datasource.driver=com.mysql.cj.jdbc.Driver


# feign 配置
i2f.springboot.config.feign.enable=true

feign.client.config.default.logger-level=full
feign.okhttp.enabled=true
feign.hystrix.enabled=true

hystrix.command.default.execution.isolation.thread.time-in-milliseconds=60000

ribbon.read-timeout=20000
ribbon.connect-timeout=60000

# mvc 配置
i2f.springboot.config.mvc.enable=true

i2f.springboot.config.mvc.object-mapper.enable=true
i2f.springboot.config.mvc.object-mapper.date-format=yyyy-MM-dd HH:mm:ss SSS
i2f.springboot.config.mvc.object-mapper.include-null=true

i2f.springboot.config.mvc.pubic-return-advice.enable=true
i2f.springboot.config.mvc.global-exception-handler.enable=true
i2f.springboot.config.mvc.param-spy-intercepter.enable=true
i2f.springboot.config.mvc.aop-global-log.enable=true

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss SSS
spring.jackson.time-zone=GMT+8

# mybatis 配置
i2f.springboot.config.mybatis.enable=true

mybatis.mapper-locations=classpath*:/mapper/**/*.xml,classpath:**/mapper/xml/*Mapper.xml,classpath:**/dao/xml/*Mapper.xml
mybatis.configuration.log-impl=org.apache.ibatis.logging.slf4j.Slf4jImpl
mybatis.configuration.call-setters-on-nulls=true

i2f.springboot.config.mybatis.interceptor.enable=true
i2f.springboot.config.mybatis.interceptor.camel-key-pre-process.enable=true
i2f.springboot.config.mybatis.interceptor.sql-log.enable=true

# pagehelper 配置
pagehelper.reasonable=false
pagehelper.row-bounds-with-count=true
pagehelper.helper-dialect=mysql

# restful 配置
i2f.springboot.config.restful.enable=true

i2f.springboot.config.restful.use-simple=true
i2f.springboot.config.restful.connect-timeout=30000
i2f.springboot.config.restful.read-timeout=30000

# schedule 配置
i2f.springboot.config.schedule.enable=true
i2f.springboot.config.schedule.pool-size=10
i2f.springboot.config.schedule.thread-name-prefix=schedule-thread-
i2f.springboot.config.schedule.await-termination-seconds=600
i2f.springboot.config.schedule.wait-for-task-to-complete-on-shutdown=true
i2f.springboot.config.schedule.reject-execution-handler=AbortPolicy

# websocket 配置
i2f.springboot.config.websocket.enable=true

i2f.springboot.config.websocket.default-endpoint.enable=true
i2f.springboot.config.websocket.default-endpoint.path=/default/broadcast

# 是否从spring上下文中获取handler和interceptor,如果值为true,则handler和interceptor项为beanName，否则为beanClass
i2f.springboot.config.websocket.registry.master.use-context-bean=false
i2f.springboot.config.websocket.registry.master.handler=i2f.springboot.websocket.impl.AbstractWebSocketHandler
i2f.springboot.config.websocket.registry.master.path=/default/echo
i2f.springboot.config.websocket.registry.master.allow-origin=*
i2f.springboot.config.websocket.registry.master.interceptor=i2f.springboot.websocket.impl.AbstractWebsocketHandshakeInterceptor


# security 配置
i2f.springboot.config.security.enable=true

i2f.springboot.config.security.session-creation-policy=STATELESS
i2f.springboot.config.security.ignore-list=
i2f.springboot.config.security.anonymous-list=/actuator/**,/swagger*/**,/*/api*,/api2/**,/webjars*,/druid/**
i2f.springboot.config.security.permit-all-list=
i2f.springboot.config.security.static-resource-list=/**/*.html,/**/*.css,/**/*.js,/**/*.png,/**/*.jpg,/**/*.jpeg,/**/*.ttf,/**/*.woff,/**/*.woff2

i2f.springboot.config.security.csrf.enable=false
i2f.springboot.config.security.cors.enable=true
i2f.springboot.config.security.form-login.enable=true
i2f.springboot.config.security.http-basic.enable=false
i2f.springboot.config.security.access-deny-exception-handler.enable=false

i2f.springboot.config.security.login-json.enable=true
i2f.springboot.config.security.login-url=/login
i2f.springboot.config.security.login-username=username
i2f.springboot.config.security.login-password=password

i2f.springboot.config.security.login-single.enable=true

# 默认的实现中的用户名密码配置,可以配置多个，每一个用分号分隔
# 一个完整用户配置如下
# {username}/{password}={authoritys}
# 其中authoritys可以有多个
# {role},{permission},{permission}
# 举例：admin/admin=ROLE_admin,sys:config:manage
# 表示：用户admin，密码admin,具有角色ROLE_admin,具有权限sys:config:manage
# authoritys可以为空，如下
i2f.springboot.config.security.default-impl-login.users=admin/admin=ROLE_admin,sys:config:manage;user/123456


# swagger 配置
i2f.springboot.config.swagger.enable=true

i2f.springboot.config.swagger.title=Micro-Service Project Api
i2f.springboot.config.swagger.description=Micro-Service project.
i2f.springboot.config.swagger.license=Apache 2.0
i2f.springboot.config.swagger.license-url=http://www.apache.org/licenses/LICENSE-2.0.html
i2f.springboot.config.swagger.version=1.0.0

i2f.springboot.config.swagger.defaults.enable=true
i2f.springboot.config.swagger.defaults.all.enable=true
i2f.springboot.config.swagger.defaults.normal.enable=true
i2f.springboot.config.swagger.defaults.rest-all.enable=true
i2f.springboot.config.swagger.defaults.web.enable=true
i2f.springboot.config.swagger.defaults.rest-get.enable=true
i2f.springboot.config.swagger.defaults.rest-post.enable=true
i2f.springboot.config.swagger.defaults.rest-put.enable=true
i2f.springboot.config.swagger.defaults.rest-delete.enable=true

i2f.springboot.config.swagger.apis-enable=true
i2f.springboot.config.swagger.apis-count=1
i2f.springboot.config.swagger.apis.config.group=config
i2f.springboot.config.swagger.apis.config.base-package=com.i2f,i2f
i2f.springboot.config.swagger.apis.config.ant-path=/config/**,/security/**

# refresh 配置
i2f.springboot.config.refresh.enable=true

i2f.springboot.config.refresh.auto-refresh.enable=false
i2f.springboot.config.refresh.auto-refresh.delay-time=5
i2f.springboot.config.refresh.auto-refresh.delay-time-unit=SECONDS

i2f.springboot.config.refresh.api-refresh.enable=true


# redis 配置
i2f.springboot.config.redis.enable=true

# 是否使用lettuce工厂穿件redisTemplate，默认使用
i2f.springboot.config.redis.enable-lettuce-factory=true
# 指定使用Jackson序列化时用的日期时间格式
i2f.springboot.config.redis.date-format=yyyy-MM-dd HH:mm:ss SSS

i2f.springboot.config.redis.cache.enable=true

# redis 配置
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=ltb12315

spring.redis.timeout=10000
spring.redis.maxIdle=300
spring.redis.maxTotal=1000
spring.redis.maxWaitMillis=1000
spring.redis.minEvictableIdleTimeMillis=300000
spring.redis.numTestsPerEvictionRun=1024
spring.redis.timeBetweenEvictionRunsMillis=30000
spring.redis.testOnBorrow=true
spring.redis.testWhileIdle=true
