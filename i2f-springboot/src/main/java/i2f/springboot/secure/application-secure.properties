# secure 配置
i2f.springboot.config.secure.enable=true

# rsa秘钥的存储路径，默认../
i2f.springboot.config.secure.rsa-store-path=../
# 过滤器的白名单匹配路径，默认空
i2f.springboot.config.secure.white-ant-paths=/**/download/**,/**/upload/**
# 过滤器加密返回后校正的字符编码，默认空
i2f.springboot.config.secure.response-charset=UTF-8
# RSA秘钥长度，默认1024
i2f.springboot.config.secure.rsa-key-size=1024

# 是否开启RSA秘钥动态刷新
# 开启的情况下，将允许客户端在历史数量*延迟秒数内的请求加密有效
# 否则加密秘钥无效，后端无法解密，前端需要刷新
# 因此，这两个值一般要保证，在用户一段时间内不操作的情况下，依旧能够有效使用
# 所以，值不能太小，默认的延迟6分钟刷新一次RSA秘钥，一共保留5个历史RSA秘钥
# 所以，默认情况下6*5=30分钟内的RSA秘钥请求都是有效的
# 只要，30分钟的时间窗口内，有进行服务访问，那么会自动更新RSA秘钥
# 也就是说，只要30分钟连接一次后端，那么就能保证一直有效的访问
# 如果真的超时了，那么会触发一次请求失败，原因是无法解密
# 重新请求一次即可，因为，第一次失败之后，就会自动更新到最新的RSA秘钥
# 重新请求就能对得上最新的秘钥了
i2f.springboot.config.secure.enable-dynamic-rsa-key=true
# 刷新的延迟秒数，默认6分钟
i2f.springboot.config.secure.dynamic-refresh-delay-seconds=360
# 保留的历史RSA秘钥数量，默认5个
i2f.springboot.config.secure.dynamic-max-histories-count=5


# 启用内置的api-controller接口提供公钥
i2f.springboot.config.secure.api.enable=true

# 是否开启响应剖面，默认开启
i2f.springboot.config.secure.response-advice.enable=true
# 是否开启请求剖面，默认开启
i2f.springboot.config.secure.request-advice.enable=true
# 是否开启请求解密AOP，默认开启
i2f.springboot.config.secure.controller-aop.enable=true
# 是否开启URL加密重定向Controller,默认开启
i2f.springboot.config.secure.enc-url-forward-controller.enable=true
